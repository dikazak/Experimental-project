pipeline {
    agent any

    stages {

        stage('Initialization') {
            steps {
                slackSend(color: '#4eade9', message: "Slack practice: deploy started")
            }
        }

      stage("last-changes") {
        def publisher = LastChanges.getLastChangesPublisher "LAST_SUCCESSFUL_BUILD", "SIDE", "LINE", true, true, "", "", "", "", ""
              publisher.publishLastChanges()
              def changes = publisher.getLastChanges()
              println(changes.getEscapedDiff())
              for (commit in changes.getCommits()) {
                  println(commit)
                  def commitInfo = commit.getCommitInfo()
                  println(commitInfo)
                  println(commitInfo.getCommitMessage())
                  println(commit.getChanges())
              }
      }
    }

    post {
        success {
            slackSend(color: '#44c480', message: "Slack practice. deploy finished: success.")
        }
        failure {
            slackSend(color: '#de5b62', message: "Slack practice. deploy finished: <${currentBuild.absoluteUrl}console|failure>.")
        }
    }
}
